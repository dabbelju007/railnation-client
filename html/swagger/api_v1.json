{
  "swagger": "2.0",
  "info": {
    "title": "Railnation Client API",
    "version": "1.0"
  },
  "basePath": "/api/v1",
  "paths": {

    "/login": {
      "post": {
        "summary": "Login to lobby",
        "description": "This method perform authentication to Rail-nation Lobby. Should be called first on any session.",
        "tags": ["Pre-game"],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "credentials",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Authentication results",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "boolean"
                }
              },
              "example": {
                "code": 0,
                "message": "Auth success",
                "data": true
              }
            }
          }
        }
      }
    },

    "/login/status": {
      "get": {
        "summary": "Returns authentication status",
        "description": "Returns whether player is logged in to lobby and entered what world",
        "tags": ["Pre-game"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Authentication status",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "object",
                  "properties":{
                    "logged_in": {
                      "type": "boolean"
                    },
                    "playing_world": {
                      "type": "integer"
                    }
                  }
                }
              },
              "example": {
                "code": 0,
                "message": "OK",
                "data": {
                  "logged_in": true,
                  "playing_world": 1455
                }
              }
            }
          }
        }
      }
    },

    "/worlds": {
      "get": {
        "summary": "List player`s worlds",
        "description": "Returns list of all game worlds where player has avatars.",
        "tags": ["Pre-game"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Game worlds",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "avatarName": {
                        "type": "string"
                      },
                      "avatarId": {
                        "type": "integer"
                      },
                      "country": {
                        "type": "string"
                      },
                      "isBanned": {
                        "type": "boolean"
                      },
                      "isSuspended": {
                        "type": "boolean"
                      },
                      "playerPrestige": {
                        "type": "integer"
                      },
                      "playerRank": {
                        "type": "integer"
                      },
                      "cityName": {
                        "type": "string"
                      },
                      "cityLevel": {
                        "type": "integer"
                      },
                      "associationName": {
                        "type": "string"
                      },
                      "associationPrestige": {
                        "type": "integer"
                      },
                      "associationRank": {
                        "type": "integer"
                      },
                      "lastLogin": {
                        "type": "integer"
                      },
                      "era": {
                        "type": "integer"
                      },
                      "eraDay": {
                        "type": "integer"
                      },
                      "eraTimeLapsed": {
                        "type": "integer"
                      },
                      "eraTimeLeft": {
                        "type": "integer"
                      },
                      "playersOnline": {
                        "type": "integer"
                      },
                      "playersActive": {
                        "type": "integer"
                      },
                      "playersRegistered": {
                        "type": "integer"
                      },
                      "scenario": {
                        "type": "string"
                      },
                      "worldName": {
                        "type": "string"
                      },
                      "worldId": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "example": {
                "code": 0,
                "message": "Auth success",
                "data": [{
                  "avatarName": "Vasiya",
                  "avatarId": 3827534,
                  "country": "Ru_ru",
                  "isBanned": false,
                  "isSuspended": false,
                  "playerPrestige": 320,
                  "playerRank": 423,
                  "cityName": "London",
                  "cityLevel": 6,
                  "associationName": "Geeks",
                  "associationPrestige": 163,
                  "associationRank": 38,
                  "lastLogin": 0,
                  "era": 1,
                  "eraDay": 3,
                  "eraTimeLapsed": 343,
                  "eraTimeLeft": 21345,
                  "playersOnline": 104,
                  "playersActive": 503,
                  "playersRegistered": 1240,
                  "scenario": "classic",
                  "worldName": "COM1 Steam Boiler",
                  "worldId": 1376
                }]
              }
            }
          }
        }
      }
    },

    "/join/{world_id}": {
      "get": {
        "summary": "Enter game world",
        "description": "Starts game in selected world.",
        "tags": ["Pre-game"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "world_id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Join world results",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "boolean"
                }
              },
              "example": {
                "code": 0,
                "message": "Game started",
                "data": true
              }
            }
          }
        }
      }
    },

    "/resources": {
      "get": {
        "summary": "Player resources",
        "description": "Returns list of all player resources as well as resources limits.",
        "tags": ["Interface"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Resources data",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "object",
                        "properties": {
                          "resource_id": {
                            "type": "integer"
                          }
                        }
                      },
                      "limit": {
                        "type": "object",
                        "properties": {
                          "resource_id": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "code": 0,
                "message": "OK",
                "data": {
                  "amount": {
                    "1": 1003,
                    "2": 34,
                    "3": 20
                  },
                  "limit": {
                    "1": 3000,
                    "2": -1,
                    "3": -1
                  }
                }
              }
            }
          }
        }
      }
    },

    "/station/": {
      "get": {
        "summary": "Self station info",
        "description": "Returns information about active player`s station buildings.",
        "tags": ["Station"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Station info",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "building_id": {
                      "object": {
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "level": {
                            "type": "integer"
                          },
                          "build_in_progress": {
                            "type": "boolean"
                          },
                          "build_finish_at": {
                            "type": "integer"
                          },
                          "production_at": {
                            "type": "integer"
                          },
                          "video_watched": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "code": 0,
                "message": "OK",
                "data": {
                  "0": {
                    "name": "Engine house",
                    "level": 10,
                    "build_in_progress": false,
                    "build_finish_at": 143529345,
                    "production_at": 0,
                    "video_watched": false
                  },
                  "1": {
                    "name": "Station concourse",
                    "level": 7,
                    "build_in_progress": false,
                    "build_finish_at": 143522345,
                    "production_at": 0,
                    "video_watched": false
                  }
                }
              }
            }
          }
        }
      }
    },

    "/station/{player_id}": {
      "get": {
        "summary": "Station info",
        "description": "Returns information about some player`s station buildings.",
        "tags": ["Station"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "player_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Station info",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "building_id": {
                      "object": {
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "level": {
                            "type": "integer"
                          },
                          "build_in_progress": {
                            "type": "boolean"
                          },
                          "build_finish_at": {
                            "type": "integer"
                          },
                          "production_at": {
                            "type": "integer"
                          },
                          "video_watched": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "code": 0,
                "message": "OK",
                "data": {
                  "0": {
                    "name": "Engine house",
                    "level": 10,
                    "build_in_progress": false,
                    "build_finish_at": 143529345,
                    "production_at": 0,
                    "video_watched": false
                  },
                  "1": {
                    "name": "Station concourse",
                    "level": 7,
                    "build_in_progress": false,
                    "build_finish_at": 143522345,
                    "production_at": 0,
                    "video_watched": false
                  }
                }
              }
            }
          }
        }
      }
    },

    "/association/": {
      "get": {
        "summary": "Self association info",
        "description": "Returns information about current active player`s association.",
        "tags": ["Association"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Association info",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "prestige": {
                      "type": "integer"
                    },
                    "rank": {
                      "type": "integer"
                    },
                    "chair": {
                      "type": "string"
                    },
                    "deputies": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "members": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "example": {
                "code": 0,
                "message": "OK",
                "data": {
                  "id": "d380ae53-932c-ad81-688b-46d471f133d8",
                  "name": "Assa",
                  "prestige": 12345,
                  "rank": 1,
                  "chair": "d380ae53-932c-ad81-688b-46d471f133d7",
                  "deputies": [
                    "d380ae53-932c-ad81-688b-46d471f133d9",
                    "d380ae53-932c-ad81-688b-46d471f133d0"
                  ],
                  "members": [
                    "d380ae53-932c-ad81-688b-46d471f133d8",
                    "d380ae53-932c-ad81-688b-46d471f133d9",
                    "d380ae53-932c-ad81-688b-46d471f133d0",
                    "d380ae53-932c-ad81-688b-46d471f133d1",
                    "d380ae53-932c-ad81-688b-46d471f133d2"
                  ]
                }
              }
            }
          }
        }
      }
    },

    "/association/{association_id}": {
      "get": {
        "summary": "Association info",
        "description": "Returns information about arbitrary association.",
        "tags": ["Association"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "association_id",
            "in": "path",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Association info",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "prestige": {
                      "type": "integer"
                    },
                    "rank": {
                      "type": "integer"
                    },
                    "chair": {
                      "type": "string"
                    },
                    "deputies": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "members": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "example": {
                "code": 0,
                "message": "OK",
                "data": {
                  "id": "d380ae53-932c-ad81-688b-46d471f133d8",
                  "name": "Assa",
                  "prestige": 12345,
                  "rank": 1,
                  "chair": "d380ae53-932c-ad81-688b-46d471f133d7",
                  "deputies": [
                    "d380ae53-932c-ad81-688b-46d471f133d9",
                    "d380ae53-932c-ad81-688b-46d471f133d0"
                  ],
                  "members": [
                    "d380ae53-932c-ad81-688b-46d471f133d8",
                    "d380ae53-932c-ad81-688b-46d471f133d9",
                    "d380ae53-932c-ad81-688b-46d471f133d0",
                    "d380ae53-932c-ad81-688b-46d471f133d1",
                    "d380ae53-932c-ad81-688b-46d471f133d2"
                  ]
                }
              }
            }
          }
        }
      }
    },

    "/collect/": {
      "post": {
        "summary": "Collect bonuses from self station",
        "description": "Collects all available bonuses from active player station (Hotel, Restaurant and Mall). Returns true if bonus was collected, false otherwise.",
        "tags": ["Station"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Collecting result",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "boolean"
                }
              },
              "example": {
                "code": 0,
                "message": "OK",
                "data": true
              }
            }
          }
        }
      }
    },

    "/collect/{player_id}": {
      "post": {
        "summary": "Collect bonuses from player`s station",
        "description": "Collects all available bonuses from specific player station (Hotel, Restaurant and Mall). Returns true if bonus was collected, false otherwise.",
        "tags": ["Station"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "player_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Collecting result",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "boolean"
                }
              },
              "example": {
                "code": 0,
                "message": "OK",
                "data": true
              }
            }
          }
        }
      }
    },

    "/collect/{player_id}/{building_id}": {
      "post": {
        "summary": "Collect single building from player`s station",
        "description": "Collects single building from specific player station (Hotel, Restaurant or Mall). Returns true if bonus was collected, false otherwise.",
        "tags": ["Station"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "player_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "building_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Collecting result",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "boolean"
                }
              },
              "example": {
                "code": 0,
                "message": "OK",
                "data": true
              }
            }
          }
        }
      }
    },

    "/autocollect/": {
      "get": {
        "summary": "Returns auto-collecting status (enabled/disabled)",
        "description": "Returns auto-collecting status (enabled/disabled)",
        "tags": ["Station"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Auto-collecting status",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "boolean"
                }
              },
              "example": {
                "code": 0,
                "message": "OK",
                "data": true
              }
            }
          }
        }
      }
    },

    "/autocollect/enable": {
      "post": {
        "summary": "Turns on auto-collecting on bonuses",
        "description": "Turns on auto-collecting on bonuses",
        "tags": ["Station"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Auto-collecting status",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "boolean"
                }
              },
              "example": {
                "code": 0,
                "message": "OK",
                "data": true
              }
            }
          }
        }
      }
    },

    "/autocollect/disable": {
      "post": {
        "summary": "Turns off auto-collecting on bonuses",
        "description": "Turns off auto-collecting on bonuses",
        "tags": ["Station"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Auto-collecting status",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "boolean"
                }
              },
              "example": {
                "code": 0,
                "message": "OK",
                "data": true
              }
            }
          }
        }
      }
    },

    "/autocollect/stats": {
      "get": {
        "summary": "Returns statistics of auto-collecting",
        "description": "Returns statistics of auto-collecting: amount of bonuses collected, missed and number of tickets granted.",
        "tags": ["Station"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Auto-collecting statistics",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "collected": {
                      "type": "integer"
                    },
                    "errors": {
                      "type": "integer"
                    },
                    "tickets": {
                      "type": "integer"
                    },
                    "watched": {
                      "type": "integer"
                    },
                    "watch_rewards": {
                      "type": "integer"
                    }
                  }
                }
              },
              "example": {
                "code": 0,
                "message": "OK",
                "data": {
                  "collected": 3425,
                  "errors": 0,
                  "tickets": 5,
                  "watched": 934,
                  "watch_rewards": 73
                }
              }
            }
          }
        }
      }
    },

    "/autocollect/history": {
      "get": {
        "summary": "Returns history of auto-collecting",
        "description": "Returns last 20 events of auto-collecting: what was collected and from which player",
        "tags": ["Station"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Auto-collecting history",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "integer"
                      },
                      "player_id": {
                        "type": "string"
                      },
                      "player_name": {
                        "type": "string"
                      },
                      "building_id": {
                        "type": "integer"
                      },
                      "building_name": {
                        "type": "string"
                      },
                      "result": {
                        "type": "boolean"
                      },
                      "ticket": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "example": {
                "code": 0,
                "message": "OK",
                "data": [
                  {
                    "date": 145363654,
                    "player_id": "d380ae53-932c-ad81-688b-46d471f133d7",
                    "player_name": "Vasiya",
                    "building_id": 7,
                    "building_name": "Bank",
                    "result": true,
                    "ticket": false
                  },
                  {
                    "date": 145363656,
                    "player_id": "d380ae53-932c-ad81-688b-46d471f133d7",
                    "player_name": "Petiya",
                    "building_id": 9,
                    "building_name": "Mall",
                    "result": true,
                    "ticket": true
                  }
                ]
              }
            }
          }
        }
      }
    },

    "/buildqueue": {
      "get": {
        "summary": "Returns current build queue",
        "description": "Returns id of buildings in build queue.",
        "tags": ["Station"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Build queue",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "example": {
                "code": 0,
                "message": "OK",
                "data": [7, 3, 3, 1]
              }
            }
          }
        }
      }
    },

    "/buildqueue/clear": {
      "post": {
        "summary": "Remove everything from build queue",
        "description": "Remove everything from build queue",
        "tags": ["Station"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Build queue",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "example": {
                "code": 0,
                "message": "OK",
                "data": []
              }
            }
          }
        }
      }
    },

    "/build/{building_id}": {
      "post": {
        "summary": "Schedule an upgrade of building",
        "description": "Add a building to a build queue and start build process if possible.",
        "tags": ["Station"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "building_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Scheduling result",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "boolean"
                }
              },
              "example": {
                "code": 0,
                "message": "OK",
                "data": true
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Cancel an upgrade of building",
        "description": "Stop upgrade of a building and return all money spent on it",
        "tags": ["Station"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "building_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Cancel result",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "boolean"
                }
              },
              "example": {
                "code": 0,
                "message": "OK",
                "data": true
              }
            }
          }
        }
      }
    },

    "/ticket/history": {
      "get": {
        "summary": "Returns rewards of ticket opening",
        "description": "Returns last 20 rewards got by ticket opening",
        "tags": ["Station"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Ticket rewards history",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "integer"
                      },
                      "reward": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "example": {
                "code": 0,
                "message": "OK",
                "data": [
                  {
                    "date": 145363654,
                    "reward": "MONEY_200000"
                  },
                  {
                    "date": 145363656,
                    "reward": "MECHANIC"
                  }
                ]
              }
            }
          }
        }
      }
    },

    "/autowatch/": {
      "get": {
        "summary": "Returns auto-watching status (enabled/disabled)",
        "description": "Returns auto-watching status (enabled/disabled)",
        "tags": ["Station"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Auto-watching status",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "boolean"
                }
              },
              "example": {
                "code": 0,
                "message": "OK",
                "data": true
              }
            }
          }
        }
      }
    },

    "/autowatch/enable": {
      "post": {
        "summary": "Turns on auto-watching of videos",
        "description": "Turns on auto-watching of videos",
        "tags": ["Station"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Auto-watching status",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "boolean"
                }
              },
              "example": {
                "code": 0,
                "message": "OK",
                "data": true
              }
            }
          }
        }
      }
    },

    "/autowatch/disable": {
      "post": {
        "summary": "Turns off auto-watching of videos",
        "description": "Turns off auto-watching of videos",
        "tags": ["Station"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Auto-watching status",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "boolean"
                }
              },
              "example": {
                "code": 0,
                "message": "OK",
                "data": true
              }
            }
          }
        }
      }
    },

    "/autowatch/rewards": {
      "get": {
        "summary": "Returns history of auto-watching rewards",
        "description": "Returns last 20 rewards for watching second videos",
        "tags": ["Station"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Auto-watch rewards",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "integer"
                      },
                      "reward": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "example": {
                "code": 0,
                "message": "OK",
                "data": [
                  {
                    "date": 145363654,
                    "reward": "VAGON_VOUCHERS_3"
                  },
                  {
                    "date": 145363656,
                    "reward": "LOTTERY_TICKET"
                  }
                ]
              }
            }
          }
        }
      }
    },
    
    "/technologies": {
      "get": {
        "summary": "All technologies for all eras",
        "description": "Returns full description of all available in-game technologies",
        "tags": ["Research"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Technologies",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "train_id": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "upgrades": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "effect": {
                              "type": "integer"
                            },
                            "price": {
                              "type": "integer"
                            },
                            "research_cost": {
                              "type": "integer"
                            }
                          }
                        },
                        "era": {
                          "type": "integer"
                        },
                        "research_cost": {
                          "type": "integer"
                        },
                        "speed": {
                          "type": "integer"
                        }, 
                        "acceleration": {
                          "type": "integer"
                        }, 
                        "endurance": {
                          "type": "integer"
                        }, 
                        "price": {
                          "type": "integer"
                        }, 
                        "waggons": {
                          "type": "integer"
                        }, 
                        "slots": {
                          "type": "integer"
                        }, 
                        "is_passenger": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "code": 0,
                "message": "OK",
                "data": {
                  "120300": {
                    "name": "Lynx",
                    "upgrades": {
                      "220301": {
                        "name": "Useful shit",
                        "type": "waggons",
                        "effect": "2",
                        "price": 500000,
                        "research_cost": 15
                      }
                    },
                    "era": 2,
                    "research_cost": 30,
                    "speed": 150,
                    "acceleration": 5,
                    "endurance": 60,
                    "price": 500000,
                    "waggons": 3,
                    "slots": 1,
                    "is_passenger": false
                  },
                  "110001": {
                    "name": "Era 1 coupling",
                    "era": 1,
                    "research_cost": 40
                  }
                }
              }
            }
          }
        }
      }
    },

    "/technologies/points": {
      "get": {
        "summary": "Points spent on technologies",
        "description": "Returns all spent points in research tree",
        "tags": ["Research"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Research points spent",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "tech_id": {
                      "type": "integer"
                    },
                    "other_tech_id": {
                      "type": "integer"
                    }
                  }
                }
              },
              "example": {
                "code": 0,
                "message": "OK",
                "data": {
                  "110100": 10,
                  "210103": 4,
                  "320402": 1
                }
              }
            }
          }
        }
      }
    },

    "/technologies/path/{tech_id}": {
      "get": {
        "summary": "Research path to technology",
        "description": "Returns list of technologies to be researched to get to specified one",
        "tags": ["Research"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "tech_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Research path",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "code": 0,
                "message": "OK",
                "data": [
                  "210100",
                  "210101",
                  "210102",
                  "210200"
                ]
              }
            }
          }
        }
      }
    },

    "/research/{tech_id}": {
      "get": {
        "summary": "Research technology",
        "description": "Add points to technology",
        "tags": ["Research"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "tech_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Research result",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "boolean"
                }
              },
              "example": {
                "code": 0,
                "message": "OK",
                "data": true
              }
            }
          }
        }
      }
    },

    "/autoresearch": {
      "get": {
        "summary": "Display research schedule",
        "description": "Returns technologies currently in research schedule",
        "tags": ["Research"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Research schedule",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "code": 0,
                "message": "OK",
                "data": [
                  "210100",
                  "210101",
                  "210102",
                  "210200"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Clear research schedule",
        "description": "Returns technologies currently in research schedule (after deleting)",
        "tags": ["Research"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Research schedule",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "code": 0,
                "message": "OK",
                "data": []
              }
            }
          }
        }
      }
    },

    "/autoresearch/{tech_id}": {
      "post": {
        "summary": "Schedule researching of technology",
        "description": "Research technology in background waiting for required science points",
        "tags": ["Research"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "tech_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Research schedule",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message",
                "data"
              ],
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "code": 0,
                "message": "OK",
                "data": [
                  "210100",
                  "210101",
                  "210102",
                  "210200"
                ]
              }
            }
          }
        }
      }
    }

  }
}